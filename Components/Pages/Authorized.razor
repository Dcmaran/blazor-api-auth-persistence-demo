@page "/authorized"
@page "/authorized/{EncryptedData}"

@inject ILocalStorageService LocalStorage
@inject CustomAuthStateProvider AuthStateProvider
@inject CryptographyService CryptographyService

@rendermode InteractiveServer

<div>
    <AuthorizeView>
        <Authorized>
            <h1>You're authorized!</h1>
        </Authorized>
        <NotAuthorized>
            <h1>You're not authorized!</h1>
        </NotAuthorized>
    </AuthorizeView>
</div>

@code {
    [Parameter]
    public string EncryptedData { get; set; } = string.Empty;

    private UserState? _userState;

    protected override async Task OnInitializedAsync()
    {
	    if (_userState is not null)
	    {
		    _userState = CryptographyService.Decrypt(EncryptedData);

		    if (_userState.IsAuthenticated)
		    {
			    AuthStateProvider.AuthenticateUser(_userState.Username!);
			    StateHasChanged();
		    }
	    }
    }
}
